[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
let g:deoplete#enable_at_startup = 1
let g:deoplete#enable_ignore_case= 1
let g:deoplete#enable_smart_case= 1
'''

[[plugins]]
repo = 'Shougo/dein.vim'

# git clone 後、実行すべきコマンドがある場合はこんな感じ
[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if dein#util#_is_windows()
    let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''


[[plugins]]
repo = 'jpalardy/vim-slime'


[[plugins]]
repo = 'zchee/deoplete-clang'
hook_add = '''
let g:deoplete#sources#clang#libclang_path = '/usr/local/opt/llvm@4/lib/libclang.dylib'
let g:deoplete#sources#clang#clang_header = '/usr/local/opt/llvm@4/include/clang'
'''

[[plugins]]
repo = 'jacoborus/tender.vim'
hook_add = '''
  set background=dark
  " colorscheme 設定は source 後に行う必要があるので VimEnter で行う。
  " 但し Colorscheme イベントの発生が抑制されないよう nented を付ける。
  " au MyAutoCmd VimEnter * nested colorscheme tender
'''

[[plugins]]
repo = 'scrooloose/syntastic'
hook_add = '''
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
" set lighline theme inside lightline config
let g:lightline = { 'colorscheme': 'tender' }
let g:lightline = {
			\ 'colorscheme': 'wombat',
			\ 'mode_map': {'c': 'NORMAL'},
			\ 'active': {
			\   'left': [ [ 'mode', 'paste' ], [ 'fugitive', 'filename' ] ]
			\ },
			\ 'component_function': {
			\   'modified': 'MyModified',
			\   'readonly': 'MyReadonly',
			\   'fugitive': 'MyFugitive',
			\   'filename': 'MyFilename',
			\   'fileformat': 'MyFileformat',
			\   'filetype': 'MyFiletype',
			\   'fileencoding': 'MyFileencoding',
			\   'mode': 'MyMode'
			\ }
			\ }
'''

[[plugins]]
repo = 'mattn/emmet-vim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'scrooloose/nerdtree'
if = "has('nvim')"
hook_add = '''
nnoremap <silent> [N :NERDTreeToggle<cr>
'''

[[plugins]]
repo = 'scrooloose/nerdcommenter'

[[plugins]]
repo = 'pangloss/vim-javascript'

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'jonas/tig'

[[plugins]]
repo = 'simeji/winresizer'

